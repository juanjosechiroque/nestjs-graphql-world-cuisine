{
	"info": {
		"_postman_id": "fccda337-7893-4866-8a1d-2f81dab4620b",
		"name": "Pais-Ciudad",
		"description": "Documentación para la asociación de Producto con Categoría de Producto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22977088"
	},
	"item": [
		{
			"name": "Agregar una ciudad a un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"ciudad_id\", \"d03c7087-f8d4-4b49-ab39-a5959fad9a84\");\r",
							"pm.globals.set(\"ciudad_id_2\", \"d952f634-3dba-4fb9-9aeb-b9c97b162a91\");\r",
							"pm.globals.set(\"pais_id\", \"80c2e38d-3968-4b4d-b560-f7db22a55a45\");\r",
							"\r",
							"pm.test(\"Codigo de estado es 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar una ciudad que no existe a un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar una ciudad a un pais que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"00000000-0000-0000-0000-000000000000",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una ciudad de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una ciudad que no existe de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una ciudad en un pais que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"00000000-0000-0000-0000-000000000000",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una ciudad no asociada al pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no se encuentra asociada al pais\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/{{ciudad_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"{{ciudad_id_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener la las ciudades de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener las ciudades de un pais que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000/ciudades/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"00000000-0000-0000-0000-000000000000",
						"ciudades",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar ciudad de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de respuesta es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n{\n   \"codigo\": \"{{ciudad_id}}\"\n}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar ciudad que no existe en un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"COdigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n{\n    \"codigo\": \"00000000-0000-0000-0000-000000000000\"\n}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar ciudad de un pais no asociado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"codigo\": \"{{ciudad_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000/ciudades/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"00000000-0000-0000-0000-000000000000",
						"ciudades",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una ciudad de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una ciudad que no existe de un pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una ciudad de un pais que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"00000000-0000-0000-0000-000000000000",
						"ciudades",
						"{{ciudad_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una ciudad no asociada al pais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no se encuentra asociada al pais\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/paises/{{pais_id}}/ciudades/{{ciudad_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"paises",
						"{{pais_id}}",
						"ciudades",
						"{{ciudad_id_2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}
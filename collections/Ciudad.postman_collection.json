{
	"info": {
		"_postman_id": "a4c6e225-8a14-4e09-a3e3-12b580bd068a",
		"name": "Ciudad",
		"description": "StartFragment\n\nDocumentación para el recurso Ciudad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22977479"
	},
	"item": [
		{
			"name": "Agregar una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"ciudad_id\", data.codigo);\r",
							"\r",
							"pm.test(\"Codigo de estado es 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Caracas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/ciudades",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades"
					]
				},
				"description": "Esta solicitud crea una nueva ciudad. La nueva ciudad debe estar asociada a un país existente. El API retorna el recurso creado con el ID asignado."
			},
			"response": [
				{
					"name": "Agregar una ciudad",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n      \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n      \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener todas las ciudades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Numero de ciudades > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ciudades",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades"
					]
				},
				"description": "Esta solicitud obtiene un listado de las ciudades existentes."
			},
			"response": [
				{
					"name": "Obtener todas las ciudades",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120007\",\n        \"nombre\": \"Cali\"\n    },\n    {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120008\",\n        \"nombre\": \"Medellin\"\n    },\n    {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120009\",\n        \"nombre\": \"Bogota\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"{{ciudad_id}}"
					]
				},
				"description": "Esta solicitud obtiene una ciudad asignada a un ID existente."
			},
			"response": [
				{
					"name": "Obtener una ciudad",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener una ciudad inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Esta solicitud obtiene una ciudad asignada a un ID no válido. El API retorna un código de error con un mensaje asociado."
			},
			"response": [
				{
					"name": "Obtener una ciudad inválida",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La ciudad con el ID dado no fue encontrada\"\n}"
				}
			]
		},
		{
			"name": "Actualizar una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Pasto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"{{ciudad_id}}"
					]
				},
				"description": "Esta solicitud permite actualizar una ciudad asociada a un ID no válido. El API retorna un código de error con un mensaje asociado."
			},
			"response": [
				{
					"name": "Actualizar una ciudad",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Santiago de Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Santiago de Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Actualizar una ciudad inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Santiago de Cali\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Esta solicitud permite actualizar una ciudad asociada a un ID existente. El API retorna el recurso actualizado con el ID asignado."
			},
			"response": [
				{
					"name": "Actualizar una ciudad inválida",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Santiago de Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La ciudad con el ID dado no fue encontrada\"\n}"
				}
			]
		},
		{
			"name": "Borrar una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"{{ciudad_id}}"
					]
				},
				"description": "Esta solicitud elimina una ciudad asociada a un ID existente."
			},
			"response": [
				{
					"name": "Borrar una ciudad",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar una ciudad inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el ID dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ciudades",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Esta solicitud elimina una ciudad asociada a un ID no válido. El API retorna un código de error con un mensaje asociado."
			},
			"response": [
				{
					"name": "Borrar una ciudad inválida",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La ciudad con el ID dado no fue encontrada\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}